###################
### KEYBINDINGS ###
###################

source = ~/.config/hypr/conf/default_apps.conf

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

# == Alias
# Add this variable before the command so that we 
# go back to regular map in keybidings.
$reset_submap = hyprctl dispatch submap reset

# # ===========[ submap resize window ]============= #
# # will switch to a submap "resize"
# bind = ALT, R, submap, resize
# submap = resize
#
# # sets repeatable binds for resizing the active window
# bind = , right, resizeactive,  10   0
# bind = , left,  resizeactive, -10   0
# bind = , up,    resizeactive,   0 -10
# bind = , down,  resizeactive,   0  10
#
# # Fallback: use ESCAPE to go back to the global submap
# bind = , escape, submap, reset
#
# submap = reset
# # ===========[ end of submap resize window ]============= #

# ===========[ submap open app ]============= #
# will switch to a submap "open app" (simulating keychords).
bind = $mainMod, O, submap, open_app
submap = open_app

bind = , a, exec, 		 $reset_submap && gamemode.sh
bind = , b, exec, 		 $reset_submap && $browser
bind = , d, exec, 		 $reset_submap && discord
bind = , f, exec, 		 $reset_submap && $file_manager
bind = , k, exec, 		 $reset_submap && $pass_manager
bind = , l, exec, 		 $reset_submap && $lockscreen
bind = , n, exec, 		 $reset_submap && dunstctl history-pop
bind = , h, exec, 		 $reset_submap && dunstctl close-all
bind = , o, exec, 		 $reset_submap && obsidian  
# RECORDING screencasting. Press the same keybinding to start/stop recording.
bind = , r, exec,      $reset_submap && record_screen.sh
bind = , s, exec,      $reset_submap && spotify
bind = , t, exec,      $reset_submap && scratch.sh btop
bind = , v, exec,      $reset_submap && pavucontrol
bind = , w, exec,      $reset_submap && toggle_waypaper.sh
bind = , p, exec,      $reset_submap && battery_performance_profile.sh
bind = , m, exec,      $reset_submap && ferdium


# ===========================================================================
# To list input devices available:
# pactl list short sources
# pw-cli ls Node
# bind = $mainMod SHIFT, r, exec, wf-recorder -g "$(slurp)" --audio=alsa_output.pci-0000_08_00.6.analog-stereo.monitor -f ~/Videos/mov-$(date +"%Y-%m-%d--%H-%M-%S.mp4")
# ===========================================================================

# Fallback: use ESCAPE to go back to the global submap
bind = , escape, submap, reset

# ===========[ end of submap open app ]============= #
submap = reset

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
# ---------------------------------------------------
# bind = MODS, key, dispatcher, params
# ---------------------------------------------------
bind = $mainMod,       T,         exec,       $terminal
bind = $mainMod,       space,     exec,       $menu
bind = $mainMod SHIFT, A,         exec,       scratch.sh pulse
bind = $mainMod, 		 	 P,         exec,       hyprshot -m region -r - | swappy -f -
bind = $mainMod SHIFT, P,         exec,       hyprshot -m window -r - | swappy -f -
bind = $mainMod ALT,   P,         exec,       hyprshot -m output -r - | swappy -f -
bind = $mainMod,       backspace, exec,       $logout_app
bind = $mainMod SHIFT, R,         exec,       hyprctrl reload
bind = $mainMod,       B,         exec,       toggle_waybar.sh
bind = ALT,      			 Return,    fullscreen, 
bind = $mainMod,       M,         layoutmsg,  swapwithmaster master 
bind = $mainMod,       Q,         killactive,
bind = $mainMod,       Y,         exec,       scratch.sh yazi
bind = $mainMod,       Z,         exec,       scratch.sh pad
bind = $mainMod,       W, 				togglefloating, 
bind = CTRL ALT,			 W, 				exec, 		  killall waybar || waybar

# Kill any ongoing recording.
# bind = $mainMod  SHIFT, K,         exec,            killall -s SIGINT wf-recorder;  exec notify-send "Recording Saved"

# bind = $mainMod SHIFT, Q, exit,

bind = $mainMod,        F1,        exec,            toggle_help.sh && notify-send "Showing system help!"
bind = $mainMod,        F2,        exec,            toggle_idle.sh # turns on/off idle activation
bind = $mainMod,        F3,        exec,            blueman-manager
bind = $mainMod,        F4,	       exec,            activate_webcam.sh 0 # if webcam does not turn on, we may need to change de argument here from 0 to, say, 1.
bind = $mainMod,        F5,        exec,            choose_keymap.sh # keyboard layouts via rofi
bind = $mainMod,        F6,        exec,            display_select.sh # multiple monitors configuration via rofi
bind = $mainMod,        F7,        exec,            networkmanager_dmenu # network connection via rofi
bind = $mainMod,        F8,        exec,            toggle_dunst.sh
bind = $mainMod,        F9,        exec,            toggle_wifi.sh
bind = $mainMod,        F10,       exec,            toggle_bluetooth.sh
bind = $mainMod,        F11,       exec,            exec notify-send "MOD+F11: Not assigned yet!"
bind = $mainMod,        F12,       exec,            exec notify-send "MOD+F12: Not assigned yet!"

# bind = $mainMod,        TAB,       focusurgentorlast
bind = $mainMod,        TAB,       exec,            wsp_switch_back.sh
bind = $mainMod,  			V,         exec,            cliphist list | rofi -dmenu | cliphist decode | wl-copy
bind = ALT, 						TAB, 			 exec, 						pkill -x rofi || rofi -show window

# bind = $mainMod, P, pseudo, # dwindle
# bind = $mainMod, J, togglesplit, # dwindle

# Window split ratio
#/# binde = Super, +/-,, # Window: split ratio +/- 0.1
binde = Super, Minus, splitratio, -0.03 # [hidden]
binde = Super, Equal, splitratio, +0.03 # [hidden]

# Move focus with mainMod + arrow keys
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
# bind = $mainMod, k, cyclenext,
# bind = $mainMod, j, cyclenext, prev
# bind = $mainMod, k, layoutmsg, cycleprev
# bind = $mainMod, j, layoutmsg, cyclenext
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d

# Swapping windows
bind = $mainMod CTRL, j, layoutmsg, swapnext
bind = $mainMod CTRL, k, layoutmsg, swapprev

# Resizing windows
bind = $mainMod ALT, J, resizeactive, 0 10
bind = $mainMod ALT, K, resizeactive, 0 -10
bind = $mainMod ALT, H, resizeactive, -10 0
bind = $mainMod ALT, L, resizeactive, 10 0

# Move focus to the next/previous workspace
# BEFORE: bind = $mainMod,      right,   workspace,  e+1
bind = $mainMod,            right,   exec, wsp_log_relative_action.sh workspace e+1
bind = $mainMod,            left,    exec, wsp_log_relative_action.sh workspace e-1
bind = $mainMod SHIFT,      right,   exec, wsp_log_relative_action.sh workspace r+1
bind = $mainMod SHIFT,      left,    exec, wsp_log_relative_action.sh workspace r-1

# Move/Switch to special workspace (scratchpad)
bind = $mainMod ALT, S, movetoworkspacesilent,  special
bind = $mainMod, 		 S, togglespecialworkspace,

# Move/Change window focus within a group
bind = $mainMod, G, togglegroup, # toggle the window between focus and group
bind = $mainMod+Shift, l, changegroupactive, f
bind = $mainMod+Shift, h, changegroupactive, b
bind = $mainMod+Alt+Shift, j, moveintogroup, d
bind = $mainMod+Alt+Shift, k, moveintogroup, u
bind = $mainMod+Alt+Shift, h, moveintogroup, l
bind = $mainMod+Alt+Shift, l, moveintogroup, r
bind = $mainMod+Shift, o, moveoutofgroup

# Switch workspaces with mainMod + [0-9]
# BEFORE: bind = $mainMod, 2, workspace, 1
bind = $mainMod, 1,  exec, wsp_log_action.sh workspace 1
bind = $mainMod, 2,  exec, wsp_log_action.sh workspace 2
bind = $mainMod, 3,  exec, wsp_log_action.sh workspace 3
bind = $mainMod, 4,  exec, wsp_log_action.sh workspace 4
bind = $mainMod, 5,  exec, wsp_log_action.sh workspace 5
bind = $mainMod, 6,  exec, wsp_log_action.sh workspace 6
bind = $mainMod, 7,  exec, wsp_log_action.sh workspace 7
bind = $mainMod, 8,  exec, wsp_log_action.sh workspace 8
bind = $mainMod, 9,  exec, wsp_log_action.sh workspace 9
bind = $mainMod, 0,  exec, wsp_log_action.sh workspace 10

# Switch workspaces to a relative workspace
bind = $mainMod CTRL, l, workspace, r+1
bind = $mainMod CTRL, h, workspace, r-1

# Move focused window to a relative workspace
bind = $mainMod+Ctrl+Alt, l, movetoworkspace, r+1
bind = $mainMod+Ctrl+Alt, h, movetoworkspace, r-1

# Move active window to a workspace, but don't switch there: mainMod + SHIFT + [0-9]
bind = $mainMod ALT, 1, movetoworkspacesilent, 1
bind = $mainMod ALT, 2, movetoworkspacesilent, 2
bind = $mainMod ALT, 3, movetoworkspacesilent, 3
bind = $mainMod ALT, 4, movetoworkspacesilent, 4
bind = $mainMod ALT, 5, movetoworkspacesilent, 5
bind = $mainMod ALT, 6, movetoworkspacesilent, 6
bind = $mainMod ALT, 7, movetoworkspacesilent, 7
bind = $mainMod ALT, 8, movetoworkspacesilent, 8
bind = $mainMod ALT, 9, movetoworkspacesilent, 9
bind = $mainMod ALT, 0, movetoworkspacesilent, 10

# Move focused window around the current workspace
bind = $mainMod SHIFT CTRL, h, movewindow, l
bind = $mainMod SHIFT CTRL, l, movewindow, r
bind = $mainMod SHIFT CTRL, k, movewindow, u
bind = $mainMod SHIFT CTRL, j, movewindow, d

# Move active window to a workspace AND switch to that workspace    
# BEFORE: bind = $mainMod CTRL, 1,  movetoworkspace, 1
bind = $mainMod SHIFT, 1,  exec, wsp_log_action.sh movetoworkspace 1
bind = $mainMod SHIFT, 2,  exec, wsp_log_action.sh movetoworkspace 2
bind = $mainMod SHIFT, 3,  exec, wsp_log_action.sh movetoworkspace 3
bind = $mainMod SHIFT, 4,  exec, wsp_log_action.sh movetoworkspace 4
bind = $mainMod SHIFT, 5,  exec, wsp_log_action.sh movetoworkspace 5
bind = $mainMod SHIFT, 6,  exec, wsp_log_action.sh movetoworkspace 6
bind = $mainMod SHIFT, 7,  exec, wsp_log_action.sh movetoworkspace 7
bind = $mainMod SHIFT, 8,  exec, wsp_log_action.sh movetoworkspace 8
bind = $mainMod SHIFT, 9,  exec, wsp_log_action.sh movetoworkspace 9
bind = $mainMod SHIFT, 0,  exec, wsp_log_action.sh movetoworkspace 10

# Example special workspace (scratchpad)
# bind = $mainMod, Z, togglespecialworkspace, magic
# bind = $mainMod SHIFT, Z, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
# BEFORE: bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_down, exec, wsp_log_relative_action.sh workspace e+1
bind = $mainMod, mouse_up,   exec, wsp_log_relative_action.sh workspace e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume,  exec, change_volume.sh up
bindel = ,XF86AudioLowerVolume,  exec, change_volume.sh down
bindel = ,XF86AudioMute,         exec, change_volume.sh mute
# bindel = ,XF86AudioMicMute,      exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp,   exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

# Requires playerctl
bindl = , XF86AudioNext,  exec,  audio_next.sh
bindl = , XF86AudioPause, exec,  audio_play_pause.sh
bindl = , XF86AudioPlay,  exec,  audio_play_pause.sh
bindl = , XF86AudioPrev,  exec,  audio_prev.sh
